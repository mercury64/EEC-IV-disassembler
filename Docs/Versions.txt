
Version Summary
(dropped some older version descriptions)

--- NB. Use 'development' subdirectories for latest test versions ---

** Version 4.0.7 (16 Jun 2021) *********

[Copied across from development branch 29 Nov 2023]

Main Changes -

1.       Changed internal bank handling so that addresses without bank can be recognised, so symbol names are better resolved for subroutine arguments. 
2.       Default to adding bank 1 in multibanks for addresses with no bank.  (NB. This is a 'best guess' where use is obviously an address)
3.       Comments- removed '\P' sequence in comments.
                  added '\M' = next tab, like word processors
                  added \R<ch><num>  = runout char 'ch' num times, and \R<num> = runout 'space' num times
                  added \SW<add> to find write symbol instead of read sym

4.       Temporarily removed auto code and data detection from 'gaps' as it doesn't work properly.
5.       ALL 'odd addressed' word ops change bank in 8065. (0 - 0x3ff addresses were ignored before)
6.       Temporarily removed autocomments (they don't help much)

Fixes -

Fixed - Missing symbols when not processed in 'SYM' command (i.e. WORD 3234 3235 "MyName" not handled correctly, but SYM 3234 "MyName" was).
Fixed - Incorrect bank processing for symbol names in multibanks, so did not appear in printout.
Fixed - Bank detect not picking up banks correctly for some binaries - changed detect algorithm (NB FM0206 still doesn't work)
Fixed - Possible crash with corrupt or non-806x binaries.
Fixed - A 'Catch22' where detect of banks fails and could not be overriden with user commands.  More error checks added also.
Fixed - Comments get incorectly pushed up to start of bank (multibanks only).
Fixed - Bitwise opcodes not displaying symbols above bit 7 for CLRW (was incorrectly set as byte sized)
Fixed - 'W' flag with symbols not working if set in upper byte.
Fixed - According to Ford manuals, the 'odd address' word mode for 8065 CPU does not apply for registers below R20..... But not sure if this is true
Fixed - Internal change to ranges indexing for symbols and rbases, it was possible to 'lose' a symbol entirely.
Fixed - Additional data printout of bank (i.e. : K <n>)  shows wrong bank.
Fixed - Immediate push did not resolve bank address printout correctly in multibanks.
Fixed - Bug with immediate byte shown as word (LDZBW, LDSBW, ML2B, ML3B, etc.)
Fixed - Infinite loop in internal code (before printout) 
Fixed - Printout shows wrong value for STW   (probably only happens in special test bins) 
Fixed - Incorrect read of symbols at 0x3ff returning "invalid bank" in some cases


** Version 4.0.6 *********

Main changes -

1.  Added many more error checks, error and warning reports to command processing to give better user feedback (commands failed silently before)
2.  Added a new 'global level' options to command structure.
3.  Added alternate layout options for subroutine arguments and structures (in global level).
4.  Moved special function and terminator commands to global level.
5.  Changed special purpose subroutines commands to make them more obvious
6.  Print layout improvements, including lining up columns with symbol names.
7.  Longer symbol names supported (up to 63 chars)
8.  New style of comment 'special sequences' to control comment layouts.

9.  Fixes for several symbol name issues.
10. Fixes for symbol names which don't appear in the listings. 
11. Extra checks and fixes for non-standard bank ordering and auto detection in multibank bins.
12. Replaced options command with 'setopts' which uses meaningful text strings instead of letters.
13. changed code for cppcheck warnings raised (thanks dantob)
14. Fixes for ignored arguments in user commands.

15. Many minor bug fixes, mostly print layout. (honestly, I've lost track of these smaller ones)

16. Added new pdf manual and separate command definition for version 4.0.6.

Special thanks to jsa for all his testing and feedback with versions 4.x



** Version 4.0.5 *****************

Fixed.

1. Fixed listing output bug where fixed register pointers (rbase) not showing the second register with 3 operand opcodes (ad3w etc.)
2. Fixed bug which caused some tables to be missed entirely.  Still doesn't get every table, but better than 4.04

Changes/Additions

2. Improve detection of 1D and 2D (function and table) end points.
3. Add data analysis of 2D (table) structs to correct row and column sizes.   Not perfect, but better



** Version 4.0.4 *****************

1. Changed vector list validation after discovering another couple of bins which don't work correctly.

2. Added extra scan pass to check for 'code holes' which may have been missed.   Example is where
   binary does a 'remote' push, such as R34=79f9;   and a push(R34); somewhere else, not obviously connected.

3. Added extra check where an indexed data reference actually points to a code location, but the register value
   cannot be calculated.  If the pointer is within 16 bytes of a 'hole' in the code, then data pointer is moved
   to the 'hole'.  Example in A9L where reference has [R56+2a2e] but code covers 2a15 to 2a31. R56 is 4,6, or 8  (num cylinders)
   so data ref is moved automatically to 2a32 (+4).

4.  Added extra checks for data overlapping code and faulty references.
5.  Symbols.  Change code for 'find symbol' internally to make consistent 
6.  Added an 'F' option for symbols to indicate a 'flag' byte so that ldb (and ldw) will show individual bit names   as OR and AND do.  
7.  Incorrect address range handling for syms and rbase causes them not to appear/work reliably in listing
8.  change word ops for bit flags to byte, e.g. from "B8_R34 ="   to "B0_R35 =" for bits > 7  
9.  fixed not reading back .msg file as a .dir file correctly.   ('U' option and comment lines)
10. fixed AND and OR not showing single bit flags ("Bx_Rn = 0" style)
11. Incorrect showing of 'return' shortcut in psuedo code.
12. Fix incorrect SYM command when defined with an address range.



** Version 4.0.3 *****************

Version 4 onwards automatically handle VARIABLE ARGUMENTS in subroutines.  This required some big changes, which broke other things..........

Fixed  -

1. Fixed - Symbol names not found for some indexed opcodes.
(note that there are some rules implied to stop small offsets being interpreted as special
registers - i.e. less than 0x20). This rule may need to be changed for some cases.

2. Fixed vect list sometimes not picking up last pointer item in list.

3. Change autonumbered names to <name><address> style instead of <name><sequence number>
make command options and layout more regular

4. Some rbase (register base pointers) not being detected and missed off.
5. Fix data offset not appearing/working for some commands.
6. Print bank commands with comment so don't get processed (more work here)
7. User specified subroutines now work - note change in command structure.  
8. Doesn't always expand tables (2D lookups) to their full size

10. Fixed problem with incorrect number of arguments (CARD and others)
11. Fixed problem with listing displaying incorrect number/symbol in indexed opcodes
12. Fixed 'NULL' symbol with word commands
13. Added more code to correctly size arguments.    
14. Fixed crash when commands overlap - now gives error message
15. Fixed a path problem for Windows which causes no processing to occur 
16. Fixed symbol name not being resolved for multibank indirects and indexed opcodes


** Version 3.08 (and previous) *****************
NB> No automatic detection of variable arguments !!


Fixed  - Incorrect data structure boundary check sometimes causes fail to print next structure correctly. (e.g.table and function)

Rewrite large part of bank detection code after discovering several issues with 'odd' sized binaries (i.e. not a multiple of 64 or 56K), 
and ones with a missing or extra byte at front. Also more errors with single bank 8065 bins (Australian ones mainly).  Also now allow
handling of a bin with a duplicate code bank ( did someone do some with 'original-modified' banks together in same file ??)


Rewrite parts of print routines to - 
Change - (cosmetic) Add extra separation for comments where printout overlaps normal comments column.  Remove redundant spaces.  
Fixed  - Incorrect source print for several conditional jumps following 3 operand opcodes and "R0 =" instructions  
Change - Swop operand printout order for compare "0 = Rxx" cases with all conditional jumps (and operator so it's valid logic). 

NB. still get some incorrect source prints for if(??) to be sorted out.  e.g  'if (0=0)' 

Rewrite background task list detection and verification from PUSH opcodes, 3.07 doesn't handle all the bins correctly. 

Tidy up incorrect printout when 'filler' area is not 0xff, which happens in some binaries.

Allow operand prints in comment lines with \1 \2 \3 

Fixed -  Fail to pick up a PUSH(addr) in the initial code block as a jump to rest of code (LA3)
Fixed -  Error in analysis of indexed PUSH(Rxx + ADDR) can cause a data address to be incorrectly interpreted as code.
Fixed -  Error in processing of function and table lookup subroutines gives inconsistent results for signed vs. unsigned structures. (AGAIN!!)
Fixed -  Finding banks in multibank bin may fail if a bank has extra NOP opcodes at front.
Fixed -  Fixed inconsistent output order of newlines with comment blocks

Change - Hold mechanism (for subroutine arguments) to a more efficient chain setup.
Added -  Handling of bins which use altstack (R22) for their background task list e.g. BWAK3N2.bin  (needs more testing, but seems to work)
Added -  optional address ranges for commands RBASE and SYMbol. See documentation for correct syntax.   

Fixed - ADDC with folowing JC/JNC not including carry flag in comment
Fixed - JNVT sometimes prints as "if (CY)" should be "if (OVT)"
Fixed - NRML opcode prints as "Rxx = NRML(0);"  instead of "NRML(Ryy);"
Fixed - Error in address overlap checking can 'lose' commands entered.  

Add check for JC/JNC after INC or DEC opcodes.
Add glossary at top of listing.

Change shifts to put a comment for equivalent multiply and divide instead of substituting it.
Change (long) and (int)  to LR and WR format, add S (signed) and Y (byte) where relevant for extra clarity.

Reorder internal index tables for opcodes (declared in case new bug pops up) 

Removed 'V' option (divisor) for words and bytes - it doesn't work anyway.
Removed incorrect debug info in subroutine listings.

